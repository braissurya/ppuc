<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.melawai.ppuc.persistence.SmsserverCallsMapper">

	<cache />

	<!-- result map-->
	<resultMap type="SmsserverCalls" id="SmsserverCallsMap">
		<id property="id" column="id"  />  
		<result property="id" column="id" />
		<result property="call_date" column="call_date" />
		<result property="gateway_id" column="gateway_id" />
		<result property="caller_id" column="caller_id" />
	</resultMap>

	<!-- nama kolom yang ingin ditampilkan -->
	<sql id="defaultColoumn">
		C.ID as id,
		C.CALL_DATE as call_date,
		C.GATEWAY_ID as gateway_id,
		C.CALLER_ID as caller_id
	</sql>

	<!-- query select, dengan kolom yang default di atas, apabila mau ditambahkan join juga bisa disini
	perubahan query ini akan mempengaruhi select paging dan get di bawah  -->
	<sql id="selectQuery">
		select * from (
			select <include refid="defaultColoumn" /> from smsserver_calls C
		)T
	</sql>

	<!-- kolom apa aja yang mau disearching -->
	<sql id="searchTambahan">
		Where 1=1
			<!--!!TAMBAHAN parameter untuk search-->
	</sql>

	<!-- kolom apa aja yang mau disearching -->
	<sql id="search">
		WHERE 1=1 AND (
			 gateway_id like  CONCAT('%', #{search}, '%')
			 OR caller_id like  CONCAT('%', #{search}, '%')
		)
	</sql>

	<!-- insert query untuk table ini -->
	<insert id="insert" parameterType="SmsserverCalls" useGeneratedKeys="true" keyColumn="ID" keyProperty="id">
		INSERT INTO smsserver_calls (
			ID,
			CALL_DATE,
			GATEWAY_ID,
			CALLER_ID
		) values (
			#{id},
			#{call_date},
			#{gateway_id},
			#{caller_id}
		)
	</insert>

	<!-- update query untuk table ini -->
	<update id="update" parameterType="SmsserverCalls">
		UPDATE smsserver_calls
		<set>
			<if test="id != null">ID = #{id}, </if>
			<if test="call_date != null">CALL_DATE = #{call_date}, </if>
			<if test="gateway_id != null">GATEWAY_ID = #{gateway_id}, </if>
			<if test="caller_id != null">CALLER_ID = #{caller_id} </if>
		</set>
		WHERE  
			ID= #{id} 
	</update>

	<!-- remove query untuk table ini -->
	<delete id="remove" parameterType="Long">
		delete from smsserver_calls where ID=#{value}
	</delete>

	<!-- get berdasarkan primary key -->
	<select id="get" parameterType="Long" resultMap="SmsserverCallsMap">
		<include refid="selectQuery" />	where T.id=#{value}
	</select>

	<!-- get ALL row -->
	<select id="getAll" resultMap="SmsserverCallsMap">
		<include refid="selectQuery" />
	</select>

	<!-- select berdasarkan paging parameter -->
	<select id="selectPagingList" parameterType="SmsserverCalls" resultMap="SmsserverCallsMap">
			SELECT x.* from (
				select * from (
					<include refid="selectQuery" />
					<include refid="searchTambahan" />
				) y
				<if test="search != null">
					<include refid="search" />
				</if>
				<if test="sort != null">
					order by ${sort}
				</if>
				 LIMIT #{page} , #{rowcount}
			)x
	</select>

	<!-- select jumlah seluruh data yang akan di paging -->
	<select id="selectPagingCount" parameterType="SmsserverCalls" resultType="Integer">
		select count(*) from(
			SELECT x.* from (
				select * from (
					<include refid="selectQuery" />
					<include refid="searchTambahan" />
				) y
				<if test="search != null">
					<include refid="search" />
				</if>
			)x
		) z
	</select>

	<!-- QUERY CUSTOM LAIN-LAIN bisa dimasukkan dibawah ini -->

</mapper>
